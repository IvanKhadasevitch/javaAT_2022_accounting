package by.khadasevich.accounting.dal.dao.impl;

import by.khadasevich.accounting.dal.db.ConnectionManager;

import java.sql.PreparedStatement;
import java.sql.SQLException;

/**
 * Class encapsulate basic methods for Classes what realised DAO interfaces.
 */
public abstract class AbstractDao {
    /**
     * Creates a PreparedStatement object for sending parameterized SQL.
     * As statements to the database.
     * A SQL statement with or without IN parameters can be pre-compiled
     * and stored in a PreparedStatement object. This object can then
     * be used to efficiently execute this statement multiple times.
     * @param query – an SQL statement that may contain one or more '?'
     *             IN parameter placeholders
     * @return a new default PreparedStatement object containing
     * the pre-compiled SQL statement
     * @throws SQLException if a database access error occurs.
     */
    protected PreparedStatement prepareStatement(final String query)
            throws SQLException {
        return ConnectionManager.getConnection().prepareStatement(query);
    }
    /**
     * Creates a default PreparedStatement object.
     * It has the capability to retrieve auto-generated keys.
     * @param query – an SQL statement that may contain one or more '?'
     *             IN parameter placeholders
     * @param autoGeneratedKeys  – a flag indicating whether
     * auto-generated keys should be returned;
     * one of Statement.RETURN_GENERATED_KEYS or Statement.NO_GENERATED_KEYS
     * @return a new PreparedStatement object, containing the pre-compiled
     * SQL statement, that will have the capability of
     * returning auto-generated keys
     * @throws SQLException if a database access error occurs.
     */
    protected PreparedStatement prepareStatement(final String query,
                                                 final int autoGeneratedKeys)
            throws SQLException {
        return ConnectionManager.getConnection().prepareStatement(query,
                autoGeneratedKeys);
    }
}
